rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isDocumentOwner() {
      return request.auth.uid == resource.data.user_id;
    }
    
    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated() && isOwner(userId);
      allow create: if isAuthenticated() && isOwner(userId);
      allow update: if isAuthenticated() && isOwner(userId);
      allow delete: if false;
    }
    
    // Offers collection
    match /offers/{offerId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && isDocumentOwner();
      allow delete: if isAuthenticated() && isDocumentOwner();
    }
    
    // Clients collection
    match /clients/{clientId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && isDocumentOwner();
      allow delete: if isAuthenticated() && isDocumentOwner();
    }
    
    // Client offers collection
    match /client_offers/{clientOfferId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && isDocumentOwner();
      allow delete: if isAuthenticated() && isDocumentOwner();
    }
  }
}